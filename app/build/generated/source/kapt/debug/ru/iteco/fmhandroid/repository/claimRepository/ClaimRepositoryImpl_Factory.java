// Generated by Dagger (https://dagger.dev).
package ru.iteco.fmhandroid.repository.claimRepository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.iteco.fmhandroid.api.ClaimApi;
import ru.iteco.fmhandroid.dao.ClaimCommentDao;
import ru.iteco.fmhandroid.dao.ClaimDao;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ClaimRepositoryImpl_Factory implements Factory<ClaimRepositoryImpl> {
  private final Provider<ClaimApi> claimApiProvider;

  private final Provider<ClaimDao> claimDaoProvider;

  private final Provider<ClaimCommentDao> claimCommentDaoProvider;

  public ClaimRepositoryImpl_Factory(Provider<ClaimApi> claimApiProvider,
      Provider<ClaimDao> claimDaoProvider, Provider<ClaimCommentDao> claimCommentDaoProvider) {
    this.claimApiProvider = claimApiProvider;
    this.claimDaoProvider = claimDaoProvider;
    this.claimCommentDaoProvider = claimCommentDaoProvider;
  }

  @Override
  public ClaimRepositoryImpl get() {
    return newInstance(claimApiProvider.get(), claimDaoProvider.get(), claimCommentDaoProvider.get());
  }

  public static ClaimRepositoryImpl_Factory create(Provider<ClaimApi> claimApiProvider,
      Provider<ClaimDao> claimDaoProvider, Provider<ClaimCommentDao> claimCommentDaoProvider) {
    return new ClaimRepositoryImpl_Factory(claimApiProvider, claimDaoProvider, claimCommentDaoProvider);
  }

  public static ClaimRepositoryImpl newInstance(ClaimApi claimApi, ClaimDao claimDao,
      ClaimCommentDao claimCommentDao) {
    return new ClaimRepositoryImpl(claimApi, claimDao, claimCommentDao);
  }
}
