// Generated by Dagger (https://dagger.dev).
package ru.iteco.fmhandroid.api;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("ru.iteco.fmhandroid.api.qualifier.Refresh")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RefreshApiModule_ProvideRefreshTokensApiFactory implements Factory<RefreshTokensApi> {
  private final Provider<Retrofit> retrofitProvider;

  public RefreshApiModule_ProvideRefreshTokensApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RefreshTokensApi get() {
    return provideRefreshTokensApi(retrofitProvider.get());
  }

  public static RefreshApiModule_ProvideRefreshTokensApiFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new RefreshApiModule_ProvideRefreshTokensApiFactory(retrofitProvider);
  }

  public static RefreshTokensApi provideRefreshTokensApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(RefreshApiModule.INSTANCE.provideRefreshTokensApi(retrofit));
  }
}
