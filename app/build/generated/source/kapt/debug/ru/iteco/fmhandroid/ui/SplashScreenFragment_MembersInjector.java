// Generated by Dagger (https://dagger.dev).
package ru.iteco.fmhandroid.ui;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;
import ru.iteco.fmhandroid.api.UserApi;
import ru.iteco.fmhandroid.auth.AppAuth;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashScreenFragment_MembersInjector implements MembersInjector<SplashScreenFragment> {
  private final Provider<AppAuth> authProvider;

  private final Provider<UserApi> userApiProvider;

  public SplashScreenFragment_MembersInjector(Provider<AppAuth> authProvider,
      Provider<UserApi> userApiProvider) {
    this.authProvider = authProvider;
    this.userApiProvider = userApiProvider;
  }

  public static MembersInjector<SplashScreenFragment> create(Provider<AppAuth> authProvider,
      Provider<UserApi> userApiProvider) {
    return new SplashScreenFragment_MembersInjector(authProvider, userApiProvider);
  }

  @Override
  public void injectMembers(SplashScreenFragment instance) {
    injectAuth(instance, authProvider.get());
    injectUserApi(instance, userApiProvider.get());
  }

  @InjectedFieldSignature("ru.iteco.fmhandroid.ui.SplashScreenFragment.auth")
  public static void injectAuth(SplashScreenFragment instance, AppAuth auth) {
    instance.auth = auth;
  }

  @InjectedFieldSignature("ru.iteco.fmhandroid.ui.SplashScreenFragment.userApi")
  public static void injectUserApi(SplashScreenFragment instance, UserApi userApi) {
    instance.userApi = userApi;
  }
}
