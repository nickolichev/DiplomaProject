// Generated by view binder compiler. Do not edit!
package ru.iteco.fmhandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.iteco.fmhandroid.R;

public final class FragmentFilterNewsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton cancelButton;

  @NonNull
  public final MaterialButton filterButton;

  @NonNull
  public final MaterialCheckBox filterNewsActiveMaterialCheckBox;

  @NonNull
  public final MaterialCheckBox filterNewsInactiveMaterialCheckBox;

  @NonNull
  public final TextView filterNewsTitleTextView;

  @NonNull
  public final AutoCompleteTextView newsItemCategoryTextAutoCompleteTextView;

  @NonNull
  public final TextInputLayout newsItemCategoryTextInputLayout;

  @NonNull
  public final TextInputEditText newsItemPublishDateEndTextInputEditText;

  @NonNull
  public final TextInputLayout newsItemPublishDateEndTextInputLayout;

  @NonNull
  public final TextInputEditText newsItemPublishDateStartTextInputEditText;

  @NonNull
  public final TextInputLayout newsItemPublishDateStartTextInputLayout;

  private FragmentFilterNewsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton cancelButton, @NonNull MaterialButton filterButton,
      @NonNull MaterialCheckBox filterNewsActiveMaterialCheckBox,
      @NonNull MaterialCheckBox filterNewsInactiveMaterialCheckBox,
      @NonNull TextView filterNewsTitleTextView,
      @NonNull AutoCompleteTextView newsItemCategoryTextAutoCompleteTextView,
      @NonNull TextInputLayout newsItemCategoryTextInputLayout,
      @NonNull TextInputEditText newsItemPublishDateEndTextInputEditText,
      @NonNull TextInputLayout newsItemPublishDateEndTextInputLayout,
      @NonNull TextInputEditText newsItemPublishDateStartTextInputEditText,
      @NonNull TextInputLayout newsItemPublishDateStartTextInputLayout) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.filterButton = filterButton;
    this.filterNewsActiveMaterialCheckBox = filterNewsActiveMaterialCheckBox;
    this.filterNewsInactiveMaterialCheckBox = filterNewsInactiveMaterialCheckBox;
    this.filterNewsTitleTextView = filterNewsTitleTextView;
    this.newsItemCategoryTextAutoCompleteTextView = newsItemCategoryTextAutoCompleteTextView;
    this.newsItemCategoryTextInputLayout = newsItemCategoryTextInputLayout;
    this.newsItemPublishDateEndTextInputEditText = newsItemPublishDateEndTextInputEditText;
    this.newsItemPublishDateEndTextInputLayout = newsItemPublishDateEndTextInputLayout;
    this.newsItemPublishDateStartTextInputEditText = newsItemPublishDateStartTextInputEditText;
    this.newsItemPublishDateStartTextInputLayout = newsItemPublishDateStartTextInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFilterNewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFilterNewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_filter_news, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFilterNewsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      MaterialButton cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.filter_button;
      MaterialButton filterButton = ViewBindings.findChildViewById(rootView, id);
      if (filterButton == null) {
        break missingId;
      }

      id = R.id.filter_news_active_material_check_box;
      MaterialCheckBox filterNewsActiveMaterialCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (filterNewsActiveMaterialCheckBox == null) {
        break missingId;
      }

      id = R.id.filter_news_inactive_material_check_box;
      MaterialCheckBox filterNewsInactiveMaterialCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (filterNewsInactiveMaterialCheckBox == null) {
        break missingId;
      }

      id = R.id.filter_news_title_text_view;
      TextView filterNewsTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (filterNewsTitleTextView == null) {
        break missingId;
      }

      id = R.id.news_item_category_text_auto_complete_text_view;
      AutoCompleteTextView newsItemCategoryTextAutoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (newsItemCategoryTextAutoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.news_item_category_text_input_layout;
      TextInputLayout newsItemCategoryTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (newsItemCategoryTextInputLayout == null) {
        break missingId;
      }

      id = R.id.news_item_publish_date_end_text_input_edit_text;
      TextInputEditText newsItemPublishDateEndTextInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (newsItemPublishDateEndTextInputEditText == null) {
        break missingId;
      }

      id = R.id.news_item_publish_date_end_text_input_layout;
      TextInputLayout newsItemPublishDateEndTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (newsItemPublishDateEndTextInputLayout == null) {
        break missingId;
      }

      id = R.id.news_item_publish_date_start_text_input_edit_text;
      TextInputEditText newsItemPublishDateStartTextInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (newsItemPublishDateStartTextInputEditText == null) {
        break missingId;
      }

      id = R.id.news_item_publish_date_start_text_input_layout;
      TextInputLayout newsItemPublishDateStartTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (newsItemPublishDateStartTextInputLayout == null) {
        break missingId;
      }

      return new FragmentFilterNewsBinding((ConstraintLayout) rootView, cancelButton, filterButton,
          filterNewsActiveMaterialCheckBox, filterNewsInactiveMaterialCheckBox,
          filterNewsTitleTextView, newsItemCategoryTextAutoCompleteTextView,
          newsItemCategoryTextInputLayout, newsItemPublishDateEndTextInputEditText,
          newsItemPublishDateEndTextInputLayout, newsItemPublishDateStartTextInputEditText,
          newsItemPublishDateStartTextInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
