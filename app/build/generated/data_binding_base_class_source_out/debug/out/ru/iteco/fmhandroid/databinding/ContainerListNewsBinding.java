// Generated by view binder compiler. Do not edit!
package ru.iteco.fmhandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.iteco.fmhandroid.R;

public final class ContainerListNewsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout allNewsCardsBlockConstraintLayout;

  @NonNull
  public final TextView allNewsTextView;

  @NonNull
  public final MaterialButton editNewsMaterialButton;

  @NonNull
  public final Group emptyNewsListGroup;

  @NonNull
  public final ImageView emptyNewsListImageView;

  @NonNull
  public final TextView emptyNewsListTextView;

  @NonNull
  public final MaterialButton expandMaterialButton;

  @NonNull
  public final MaterialButton filterNewsMaterialButton;

  @NonNull
  public final RecyclerView newsListRecyclerView;

  @NonNull
  public final MaterialButton newsRetryMaterialButton;

  @NonNull
  public final MaterialButton sortNewsMaterialButton;

  private ContainerListNewsBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout allNewsCardsBlockConstraintLayout,
      @NonNull TextView allNewsTextView, @NonNull MaterialButton editNewsMaterialButton,
      @NonNull Group emptyNewsListGroup, @NonNull ImageView emptyNewsListImageView,
      @NonNull TextView emptyNewsListTextView, @NonNull MaterialButton expandMaterialButton,
      @NonNull MaterialButton filterNewsMaterialButton, @NonNull RecyclerView newsListRecyclerView,
      @NonNull MaterialButton newsRetryMaterialButton,
      @NonNull MaterialButton sortNewsMaterialButton) {
    this.rootView = rootView;
    this.allNewsCardsBlockConstraintLayout = allNewsCardsBlockConstraintLayout;
    this.allNewsTextView = allNewsTextView;
    this.editNewsMaterialButton = editNewsMaterialButton;
    this.emptyNewsListGroup = emptyNewsListGroup;
    this.emptyNewsListImageView = emptyNewsListImageView;
    this.emptyNewsListTextView = emptyNewsListTextView;
    this.expandMaterialButton = expandMaterialButton;
    this.filterNewsMaterialButton = filterNewsMaterialButton;
    this.newsListRecyclerView = newsListRecyclerView;
    this.newsRetryMaterialButton = newsRetryMaterialButton;
    this.sortNewsMaterialButton = sortNewsMaterialButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContainerListNewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContainerListNewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.container_list_news, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContainerListNewsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_news_cards_block_constraint_layout;
      ConstraintLayout allNewsCardsBlockConstraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (allNewsCardsBlockConstraintLayout == null) {
        break missingId;
      }

      id = R.id.all_news_text_view;
      TextView allNewsTextView = ViewBindings.findChildViewById(rootView, id);
      if (allNewsTextView == null) {
        break missingId;
      }

      id = R.id.edit_news_material_button;
      MaterialButton editNewsMaterialButton = ViewBindings.findChildViewById(rootView, id);
      if (editNewsMaterialButton == null) {
        break missingId;
      }

      id = R.id.empty_news_list_group;
      Group emptyNewsListGroup = ViewBindings.findChildViewById(rootView, id);
      if (emptyNewsListGroup == null) {
        break missingId;
      }

      id = R.id.empty_news_list_image_view;
      ImageView emptyNewsListImageView = ViewBindings.findChildViewById(rootView, id);
      if (emptyNewsListImageView == null) {
        break missingId;
      }

      id = R.id.empty_news_list_text_view;
      TextView emptyNewsListTextView = ViewBindings.findChildViewById(rootView, id);
      if (emptyNewsListTextView == null) {
        break missingId;
      }

      id = R.id.expand_material_button;
      MaterialButton expandMaterialButton = ViewBindings.findChildViewById(rootView, id);
      if (expandMaterialButton == null) {
        break missingId;
      }

      id = R.id.filter_news_material_button;
      MaterialButton filterNewsMaterialButton = ViewBindings.findChildViewById(rootView, id);
      if (filterNewsMaterialButton == null) {
        break missingId;
      }

      id = R.id.news_list_recycler_view;
      RecyclerView newsListRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (newsListRecyclerView == null) {
        break missingId;
      }

      id = R.id.news_retry_material_button;
      MaterialButton newsRetryMaterialButton = ViewBindings.findChildViewById(rootView, id);
      if (newsRetryMaterialButton == null) {
        break missingId;
      }

      id = R.id.sort_news_material_button;
      MaterialButton sortNewsMaterialButton = ViewBindings.findChildViewById(rootView, id);
      if (sortNewsMaterialButton == null) {
        break missingId;
      }

      return new ContainerListNewsBinding((LinearLayout) rootView,
          allNewsCardsBlockConstraintLayout, allNewsTextView, editNewsMaterialButton,
          emptyNewsListGroup, emptyNewsListImageView, emptyNewsListTextView, expandMaterialButton,
          filterNewsMaterialButton, newsListRecyclerView, newsRetryMaterialButton,
          sortNewsMaterialButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
