// Generated by view binder compiler. Do not edit!
package ru.iteco.fmhandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.iteco.fmhandroid.R;

public final class FragmentOpenClaimBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton addCommentImageButton;

  @NonNull
  public final TextView authorLabelTextView;

  @NonNull
  public final TextView authorNameTextView;

  @NonNull
  public final RecyclerView claimCommentsListRecyclerView;

  @NonNull
  public final ImageButton closeImageButton;

  @NonNull
  public final MaterialCardView commentsMaterialCardView;

  @NonNull
  public final TopCustomAppBarBinding containerCustomAppBarIncludeOnFragmentOpenClaim;

  @NonNull
  public final TextView createDataLabelTextView;

  @NonNull
  public final TextView createDataTextView;

  @NonNull
  public final TextView createTimeTextView;

  @NonNull
  public final MaterialCardView descriptionMaterialCardView;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final ImageView divider1ImageView;

  @NonNull
  public final ImageView divider2ImageView;

  @NonNull
  public final ImageView divider3ImageView;

  @NonNull
  public final ImageView divider4ImageView;

  @NonNull
  public final ImageView divider5ImageView;

  @NonNull
  public final ImageView divider6ImageView;

  @NonNull
  public final ImageButton editProcessingImageButton;

  @NonNull
  public final TextView executorNameLabelTextView;

  @NonNull
  public final TextView executorNameTextView;

  @NonNull
  public final TextView planTimeTextView;

  @NonNull
  public final TextView planeDateLabelTextView;

  @NonNull
  public final TextView planeDateTextView;

  @NonNull
  public final ImageView statusIconImageView;

  @NonNull
  public final TextView statusLabelTextView;

  @NonNull
  public final ImageButton statusProcessingImageButton;

  @NonNull
  public final TextView titleLabelTextView;

  @NonNull
  public final TextView titleTextView;

  private FragmentOpenClaimBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton addCommentImageButton, @NonNull TextView authorLabelTextView,
      @NonNull TextView authorNameTextView, @NonNull RecyclerView claimCommentsListRecyclerView,
      @NonNull ImageButton closeImageButton, @NonNull MaterialCardView commentsMaterialCardView,
      @NonNull TopCustomAppBarBinding containerCustomAppBarIncludeOnFragmentOpenClaim,
      @NonNull TextView createDataLabelTextView, @NonNull TextView createDataTextView,
      @NonNull TextView createTimeTextView, @NonNull MaterialCardView descriptionMaterialCardView,
      @NonNull TextView descriptionTextView, @NonNull ImageView divider1ImageView,
      @NonNull ImageView divider2ImageView, @NonNull ImageView divider3ImageView,
      @NonNull ImageView divider4ImageView, @NonNull ImageView divider5ImageView,
      @NonNull ImageView divider6ImageView, @NonNull ImageButton editProcessingImageButton,
      @NonNull TextView executorNameLabelTextView, @NonNull TextView executorNameTextView,
      @NonNull TextView planTimeTextView, @NonNull TextView planeDateLabelTextView,
      @NonNull TextView planeDateTextView, @NonNull ImageView statusIconImageView,
      @NonNull TextView statusLabelTextView, @NonNull ImageButton statusProcessingImageButton,
      @NonNull TextView titleLabelTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.addCommentImageButton = addCommentImageButton;
    this.authorLabelTextView = authorLabelTextView;
    this.authorNameTextView = authorNameTextView;
    this.claimCommentsListRecyclerView = claimCommentsListRecyclerView;
    this.closeImageButton = closeImageButton;
    this.commentsMaterialCardView = commentsMaterialCardView;
    this.containerCustomAppBarIncludeOnFragmentOpenClaim = containerCustomAppBarIncludeOnFragmentOpenClaim;
    this.createDataLabelTextView = createDataLabelTextView;
    this.createDataTextView = createDataTextView;
    this.createTimeTextView = createTimeTextView;
    this.descriptionMaterialCardView = descriptionMaterialCardView;
    this.descriptionTextView = descriptionTextView;
    this.divider1ImageView = divider1ImageView;
    this.divider2ImageView = divider2ImageView;
    this.divider3ImageView = divider3ImageView;
    this.divider4ImageView = divider4ImageView;
    this.divider5ImageView = divider5ImageView;
    this.divider6ImageView = divider6ImageView;
    this.editProcessingImageButton = editProcessingImageButton;
    this.executorNameLabelTextView = executorNameLabelTextView;
    this.executorNameTextView = executorNameTextView;
    this.planTimeTextView = planTimeTextView;
    this.planeDateLabelTextView = planeDateLabelTextView;
    this.planeDateTextView = planeDateTextView;
    this.statusIconImageView = statusIconImageView;
    this.statusLabelTextView = statusLabelTextView;
    this.statusProcessingImageButton = statusProcessingImageButton;
    this.titleLabelTextView = titleLabelTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOpenClaimBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOpenClaimBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_open_claim, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOpenClaimBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_comment_image_button;
      ImageButton addCommentImageButton = ViewBindings.findChildViewById(rootView, id);
      if (addCommentImageButton == null) {
        break missingId;
      }

      id = R.id.author_label_text_view;
      TextView authorLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (authorLabelTextView == null) {
        break missingId;
      }

      id = R.id.author_name_text_view;
      TextView authorNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (authorNameTextView == null) {
        break missingId;
      }

      id = R.id.claim_comments_list_recycler_view;
      RecyclerView claimCommentsListRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (claimCommentsListRecyclerView == null) {
        break missingId;
      }

      id = R.id.close_image_button;
      ImageButton closeImageButton = ViewBindings.findChildViewById(rootView, id);
      if (closeImageButton == null) {
        break missingId;
      }

      id = R.id.comments_material_card_view;
      MaterialCardView commentsMaterialCardView = ViewBindings.findChildViewById(rootView, id);
      if (commentsMaterialCardView == null) {
        break missingId;
      }

      id = R.id.container_custom_app_bar_include_on_fragment_open_claim;
      View containerCustomAppBarIncludeOnFragmentOpenClaim = ViewBindings.findChildViewById(rootView, id);
      if (containerCustomAppBarIncludeOnFragmentOpenClaim == null) {
        break missingId;
      }
      TopCustomAppBarBinding binding_containerCustomAppBarIncludeOnFragmentOpenClaim = TopCustomAppBarBinding.bind(containerCustomAppBarIncludeOnFragmentOpenClaim);

      id = R.id.create_data_label_text_view;
      TextView createDataLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (createDataLabelTextView == null) {
        break missingId;
      }

      id = R.id.create_data_text_view;
      TextView createDataTextView = ViewBindings.findChildViewById(rootView, id);
      if (createDataTextView == null) {
        break missingId;
      }

      id = R.id.create_time_text_view;
      TextView createTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (createTimeTextView == null) {
        break missingId;
      }

      id = R.id.description_material_card_view;
      MaterialCardView descriptionMaterialCardView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionMaterialCardView == null) {
        break missingId;
      }

      id = R.id.description_text_view;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.divider1_image_view;
      ImageView divider1ImageView = ViewBindings.findChildViewById(rootView, id);
      if (divider1ImageView == null) {
        break missingId;
      }

      id = R.id.divider2_image_view;
      ImageView divider2ImageView = ViewBindings.findChildViewById(rootView, id);
      if (divider2ImageView == null) {
        break missingId;
      }

      id = R.id.divider3_image_view;
      ImageView divider3ImageView = ViewBindings.findChildViewById(rootView, id);
      if (divider3ImageView == null) {
        break missingId;
      }

      id = R.id.divider4_image_view;
      ImageView divider4ImageView = ViewBindings.findChildViewById(rootView, id);
      if (divider4ImageView == null) {
        break missingId;
      }

      id = R.id.divider5_image_view;
      ImageView divider5ImageView = ViewBindings.findChildViewById(rootView, id);
      if (divider5ImageView == null) {
        break missingId;
      }

      id = R.id.divider6_image_view;
      ImageView divider6ImageView = ViewBindings.findChildViewById(rootView, id);
      if (divider6ImageView == null) {
        break missingId;
      }

      id = R.id.edit_processing_image_button;
      ImageButton editProcessingImageButton = ViewBindings.findChildViewById(rootView, id);
      if (editProcessingImageButton == null) {
        break missingId;
      }

      id = R.id.executor_name_label_text_view;
      TextView executorNameLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (executorNameLabelTextView == null) {
        break missingId;
      }

      id = R.id.executor_name_text_view;
      TextView executorNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (executorNameTextView == null) {
        break missingId;
      }

      id = R.id.plan_time_text_view;
      TextView planTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (planTimeTextView == null) {
        break missingId;
      }

      id = R.id.plane_date_label_text_view;
      TextView planeDateLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (planeDateLabelTextView == null) {
        break missingId;
      }

      id = R.id.plane_date_text_view;
      TextView planeDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (planeDateTextView == null) {
        break missingId;
      }

      id = R.id.status_icon_image_view;
      ImageView statusIconImageView = ViewBindings.findChildViewById(rootView, id);
      if (statusIconImageView == null) {
        break missingId;
      }

      id = R.id.status_label_text_view;
      TextView statusLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusLabelTextView == null) {
        break missingId;
      }

      id = R.id.status_processing_image_button;
      ImageButton statusProcessingImageButton = ViewBindings.findChildViewById(rootView, id);
      if (statusProcessingImageButton == null) {
        break missingId;
      }

      id = R.id.title_label_text_view;
      TextView titleLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleLabelTextView == null) {
        break missingId;
      }

      id = R.id.title_text_view;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new FragmentOpenClaimBinding((LinearLayout) rootView, addCommentImageButton,
          authorLabelTextView, authorNameTextView, claimCommentsListRecyclerView, closeImageButton,
          commentsMaterialCardView, binding_containerCustomAppBarIncludeOnFragmentOpenClaim,
          createDataLabelTextView, createDataTextView, createTimeTextView,
          descriptionMaterialCardView, descriptionTextView, divider1ImageView, divider2ImageView,
          divider3ImageView, divider4ImageView, divider5ImageView, divider6ImageView,
          editProcessingImageButton, executorNameLabelTextView, executorNameTextView,
          planTimeTextView, planeDateLabelTextView, planeDateTextView, statusIconImageView,
          statusLabelTextView, statusProcessingImageButton, titleLabelTextView, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
