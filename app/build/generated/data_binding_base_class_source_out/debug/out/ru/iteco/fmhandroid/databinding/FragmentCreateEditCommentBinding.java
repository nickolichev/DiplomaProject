// Generated by view binder compiler. Do not edit!
package ru.iteco.fmhandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.iteco.fmhandroid.R;

public final class FragmentCreateEditCommentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final TextInputLayout commentTextInputLayout;

  @NonNull
  public final TopCustomAppBarBinding containerCustomAppBarIncludeOnFragmentCreateEditClaimComment;

  @NonNull
  public final Button saveButton;

  private FragmentCreateEditCommentBinding(@NonNull LinearLayout rootView,
      @NonNull Button cancelButton, @NonNull TextInputLayout commentTextInputLayout,
      @NonNull TopCustomAppBarBinding containerCustomAppBarIncludeOnFragmentCreateEditClaimComment,
      @NonNull Button saveButton) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.commentTextInputLayout = commentTextInputLayout;
    this.containerCustomAppBarIncludeOnFragmentCreateEditClaimComment = containerCustomAppBarIncludeOnFragmentCreateEditClaimComment;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateEditCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateEditCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_edit_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateEditCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.comment_text_input_layout;
      TextInputLayout commentTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (commentTextInputLayout == null) {
        break missingId;
      }

      id = R.id.container_custom_app_bar_include_on_fragment_create_edit_claim_comment;
      View containerCustomAppBarIncludeOnFragmentCreateEditClaimComment = ViewBindings.findChildViewById(rootView, id);
      if (containerCustomAppBarIncludeOnFragmentCreateEditClaimComment == null) {
        break missingId;
      }
      TopCustomAppBarBinding binding_containerCustomAppBarIncludeOnFragmentCreateEditClaimComment = TopCustomAppBarBinding.bind(containerCustomAppBarIncludeOnFragmentCreateEditClaimComment);

      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new FragmentCreateEditCommentBinding((LinearLayout) rootView, cancelButton,
          commentTextInputLayout,
          binding_containerCustomAppBarIncludeOnFragmentCreateEditClaimComment, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
